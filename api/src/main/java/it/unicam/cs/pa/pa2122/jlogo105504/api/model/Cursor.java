package it.unicam.cs.pa.pa2122.jlogo105504.api.model;

/**
 * This interface represents a generic cursor.
 *
 * @author Francesco Chiocchi
 */
public interface Cursor {

    /**
     * Get the current position of the cursor.
     *
     * @return the current position of the cursor
     */
    Position getPosition();

    /**
     * Set of the position of the cursor.
     *
     * @param position of the cursor
     */
    void setPosition(Position position);

    /**
     * Get the boolean value true if the cursor is drawing, false otherwise.
     *
     * @return true if the cursor is drawing, false otherwise
     */
    boolean getPlot();

    /**
     * Update of param plot to true if the cursor is drawing, false otherwise.
     *
     * @param plot true if the cursor is drawing, false otherwise
     */
    void setPlot(boolean plot);

    /**
     * Get the value of the cursor's direction.
     *
     * @return the value of the cursor's direction
     */
    int getDirection();

    /**
     * Update the direction of the cursor.
     *
     * @param direction the new value for the direction of the cursor
     */
    void setDirection(int direction);

    /**
     * Get of the current color for generating line by the cursor.
     *
     * @return the current color for generating line by the cursor.
     */
    Color getCurrentLineColor();

    /**
     * Update the current color of the line generated by the cursor.
     *
     * @param color of the line generated by the cursor
     */
    void setCurrentLineColor(Color color);

    /**
     * This default method is used to check the direction of the cursor when a new direction will
     * be updated.
     *
     * @param direction of the cursor to be checked
     * @return true if the direction is greater than 0 and less than 360, false otherwise.
     */
    default boolean checkCursorDirection(int direction) {
        if(direction >= 0 && direction <= 360)
            return true;
        else
            throw new IllegalArgumentException("Incorrect oriented for direction!");
    }
}
